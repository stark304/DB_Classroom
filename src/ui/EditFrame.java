/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import db.DBManager;
import db.DBManager.Record;
import java.util.HashSet;

import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 * @author kuhail
 */
public class EditFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddAccountFrame
     */
    DBManager DB;
    String UserID;
    AccountsFrame parent;
    private int AdID;
    private String AdTitle;
    private String AdDetails;
    private float Price_E;
    float Price_Frame;
    private String Status_E;
    private String B_Status_E;
    private String Year_E;
    private String Month_E;
    private String Day_E;

    public EditFrame(AccountsFrame parent, DBManager DB, int AdvertiseID, String AdvTitle, String AdvDetails, float Price, String Status, String Year, String Month, String Day, String UserID) {
        this.setTitle("Edit Advertisment");
        this.parent = parent;
        this.DB = DB;
        AdID = AdvertiseID;
        AdTitle = AdvTitle;
        AdDetails = AdvDetails;
        Price_E = Price;
        Status_E = Status;
        B_Status_E = Status;
        Year_E = Year;
        Month_E = Month;
        Day_E = Day;
        this.UserID = parent.UserID;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        Details = new javax.swing.JLabel();
        Status = new javax.swing.JLabel();
        Price = new javax.swing.JLabel();
        add_advertisement = new javax.swing.JButton();
        AdvTitle = new javax.swing.JTextField();
        price_box = new javax.swing.JTextField();
        Status_Edit = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Details_box = new javax.swing.JTextArea();
        Year = new javax.swing.JLabel();
        Year_Box = new javax.swing.JTextField();
        Month = new javax.swing.JLabel();
        Month_Box = new javax.swing.JTextField();
        Day = new javax.swing.JLabel();
        Day_Box = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Title.setText("Title:");

        Details.setText("Details:");

        Status.setText("Status");

        Price.setText("Price");

        add_advertisement.setText("EDIT Advertisement");
        add_advertisement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_advertisementActionPerformed(evt);
            }
        });

        AdvTitle.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                AdvTitleAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        price_box.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                price_boxAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Status_Edit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "PN" }));
        Status_Edit.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Status_EditAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Details_box.setColumns(20);
        Details_box.setRows(5);
        Details_box.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Details_boxAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(Details_box);

        Year.setText("Year");

        Year_Box.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Year_BoxAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Month.setText("Month");

        Month_Box.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Month_BoxAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Day.setText("Day");

        Day_Box.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Day_BoxAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Details)
                            .addComponent(Title))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AdvTitle)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Status)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Status_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Year)
                                .addGap(18, 18, 18)
                                .addComponent(Year_Box))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Price)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(price_box, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Day)
                                    .addComponent(Month))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(Month_Box))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(Day_Box))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add_advertisement)
                        .addGap(150, 150, 150)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Title)
                            .addComponent(AdvTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Details)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Status)
                            .addComponent(Status_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Year)
                            .addComponent(Year_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Month)
                            .addComponent(Month_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Day)
                            .addComponent(Day_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Price)
                            .addComponent(price_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addComponent(add_advertisement)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdvTitleAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_AdvTitleAncestorAdded
        // TODO add your handling code here:
        AdvTitle.setText(AdTitle);
    }//GEN-LAST:event_AdvTitleAncestorAdded

    private void Details_boxAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Details_boxAncestorAdded
        // TODO add your handling code here:
        Details_box.setText(AdDetails);
    }//GEN-LAST:event_Details_boxAncestorAdded

    private void Status_EditAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Status_EditAncestorAdded
        // TODO add your handling code here:
        Status_Edit.setSelectedItem(Status_E);
    }//GEN-LAST:event_Status_EditAncestorAdded

    private void Year_BoxAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Year_BoxAncestorAdded
        // TODO add your handling code here:
        Year_Box.setText(Year_E);
    }//GEN-LAST:event_Year_BoxAncestorAdded

    private void Month_BoxAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Month_BoxAncestorAdded
        // TODO add your handling code here:
        Month_Box.setText(Month_E);
    }//GEN-LAST:event_Month_BoxAncestorAdded

    private void Day_BoxAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Day_BoxAncestorAdded
        // TODO add your handling code here:
        Day_Box.setText(Day_E);

    }//GEN-LAST:event_Day_BoxAncestorAdded

    private void price_boxAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_price_boxAncestorAdded
        // TODO add your handling code here:
        price_box.setText(Float.toString(Price_E));
    }//GEN-LAST:event_price_boxAncestorAdded

    private void add_advertisementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_advertisementActionPerformed
        // TODO add your handling code here:
        int ID = AdID;
        String Title = AdvTitle.getText().trim();
        String Description = Details_box.getText().trim();
        String s_price = (String) price_box.getText().trim();
        try {
            float Price_t = Float.valueOf(s_price).floatValue();
            if (Price_t < 0) {
                JOptionPane.showMessageDialog(this,
                        "Price should be positive",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            Price_Frame = Price_t;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Price isn't a number",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        String Status = (String) Status_Edit.getSelectedItem();
        String Year = Year_Box.getText().trim();
        String Month = Month_Box.getText().trim();
        String Day = Day_Box.getText().trim();
        String Date = Year + "-" + Month + "-" + Day;
        if (Title.equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Title is empty",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (Description.equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Description is empty",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (s_price.equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Price is empty",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (B_Status_E.equals("PN") && Status.equals("AC")) {
            JOptionPane.showMessageDialog(this,
                    "You can't change Pending to Active. Change it back to PN",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (Year.equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Year is empty",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((Integer.parseInt(Year)) < 0) {
            JOptionPane.showMessageDialog(this,
                    "Year is needs to Positive",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (Month.equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Year is empty",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((Integer.parseInt(Month) < 1) || (Integer.parseInt(Month)) > 12) {
            JOptionPane.showMessageDialog(this,
                    "Month is needs to between 1 and 12",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (Day.equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Year is empty",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((Integer.parseInt(Month) == 2) && ((Integer.parseInt(Day) < 0) || (Integer.parseInt(Day)) > 28)) {
            JOptionPane.showMessageDialog(this,
                    "Day is needs to between 1-28. You chose Feburary as your month",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((Integer.parseInt(Day)) < 0 || (Integer.parseInt(Day) > 31)) {
            JOptionPane.showMessageDialog(this,
                    "Day is needs to between 1-31",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean result = DB.my_update(ID, Title, Description, Price_Frame, Status, Date);
        if (result) {
            JOptionPane.showMessageDialog(this,
                    "Edits made was successful",
                    "Confirmation",
                    JOptionPane.INFORMATION_MESSAGE);
            parent.populate_all_accounts_table();
            parent.populate_accounts_table(UserID);
        }

    }//GEN-LAST:event_add_advertisementActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdvTitle;
    private javax.swing.JLabel Day;
    private javax.swing.JTextField Day_Box;
    private javax.swing.JLabel Details;
    private javax.swing.JTextArea Details_box;
    private javax.swing.JLabel Month;
    private javax.swing.JTextField Month_Box;
    private javax.swing.JLabel Price;
    private javax.swing.JLabel Status;
    private javax.swing.JComboBox Status_Edit;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Year;
    private javax.swing.JTextField Year_Box;
    private javax.swing.JButton add_advertisement;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField price_box;
    // End of variables declaration//GEN-END:variables
}
